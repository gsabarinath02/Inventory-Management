version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inventory_db
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - inventory-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d inventory_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./backend:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:password@postgres:5432/inventory_db
      SECRET_KEY: "09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --app-dir /app
    ports:
      - '8000:8000'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - inventory-network

  frontend:
    build:
      context: ./frontend
    restart: unless-stopped
    ports:
      - '3000:3000'
    depends_on:
      - backend
    networks:
      - inventory-network

volumes:
  pgdata:
    driver: local

networks:
  inventory-network:
    driver: bridge