name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install backend dependencies
      run: pip install -r requirements.txt
      
    - name: Install test dependencies
      run: pip install pytest pytest-asyncio httpx "sqlalchemy[asyncio]" aiosqlite

    - name: Run backend tests
      run: pytest --maxfail=1 --disable-warnings -q

  frontend-tests:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Install frontend dependencies
      run: npm install

    - name: Run frontend linting
      run: npm run lint

    - name: Run frontend tests with coverage
      run: npm test -- --coverage --watchAll=false --passWithNoTests

    - name: Build frontend for production
      run: npm run build

  integration-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and test with Docker Compose
      run: |
        docker-compose -f docker-compose.dev.yml up --build -d
        sleep 30
        curl -f http://localhost:8000/health
        curl -f http://localhost:3000/
        docker-compose -f docker-compose.dev.yml down 